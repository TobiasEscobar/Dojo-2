/*
Consigna SUBTE:
La empresa “UTN FRA Robotics” ganó la licitación de un proyecto,
y deberá:

Implementar un sistema que permita al usuario saber 
a qué estación de subte está
llegando, aparte el sistema muestra las estaciones 
que faltan hasta llegar a destino,
para ello debemos utilizar 4 LEDs y el display de 7 segmentos. 
Esta vez el buzzer
deberá emitir un sonido diferente cada vez que se llegue 
a una estación.
El sistema deberá arrancar apagado, luego de presionar 
el botón empezará y hará lo
pedido.
*/
#define LED_ROJO 2
#define LED_VERDE 3
#define LED_AZUL 4
#define LED_AMARILLO 5
#define LED_G 6
#define LED_F 7
#define LED_A 8
#define LED_B 9
#define LED_E A5
#define LED_D A4
#define LED_C A3
#define BOTON 13

int buzzer = 13;

void setup()
{
  pinMode(LED_ROJO, OUTPUT);
  pinMode(LED_VERDE, OUTPUT);
  pinMode(LED_AZUL, OUTPUT);
  pinMode(LED_AMARILLO, OUTPUT);
  pinMode(LED_G, OUTPUT);
  pinMode(LED_F, OUTPUT);
  pinMode(LED_A, OUTPUT);
  pinMode(LED_B, OUTPUT);
  pinMode(LED_E, OUTPUT);
  pinMode(LED_D, OUTPUT);
  pinMode(LED_C, OUTPUT);
  pinMode(BOTON, INPUT_PULLUP);
  Serial.begin(9600);
}

void loop()
{
  int encendido = digitalRead(BOTON);
  Serial.println("encendido");

//Si el boton es presionado, se cumple la condicion y se ejecuta su codigo
  if(encendido == 0)
  {
  Serial.println("Llego a constitucion");   			
  prenderDisplay(1, 1, 1, 1, 0, 0, 1, LED_ROJO, 1000);
    
    Serial.println("Llego a San Juan");
  prenderDisplay(1, 1, 0, 1, 1, 0, 1, LED_VERDE, 1000);
    
  Serial.println("Llego a Independencia");
  prenderDisplay(0, 1, 1, 0, 0, 0, 0, LED_AZUL, 1000);
    
  Serial.println("Llego a Moron");
  prenderDisplay(1, 1, 1, 1, 1, 1, 0, LED_AMARILLO, 1000);
  }
}

//Prende y apaga cualquier led que se le pase por parametro 
//y tambien la duracion de prendido
void prenderLed(int led, int duracion) 
{
  digitalWrite(led, HIGH);
  delay(duracion);
  digitalWrite(led, LOW);
}


//Prende o no prende cada parte del display, dependiendo de si recibe (1) o (0)
//Recibe tamien el tiempo de duracion y utiliza la funcion prenderLed.
void prenderDisplay(int a, int b, int c, int d, int e, int f, int g,  int led, int duracion) 
{
  digitalWrite(LED_A, a);
  digitalWrite(LED_B, b);
  digitalWrite(LED_C, c);
  digitalWrite(LED_D, d);
  digitalWrite(LED_E, e);
  digitalWrite(LED_F, f);
  digitalWrite(LED_G, g);
  prenderLed(led, duracion);
  apagarDisplay();
  delay(duracion);
}

//Apaga a toda parte del display que este encendida en ese momento.
void apagarDisplay() 
{
  digitalWrite(LED_A, LOW);
  digitalWrite(LED_B, LOW);
  digitalWrite(LED_C, LOW);
  digitalWrite(LED_D, LOW);
  digitalWrite(LED_E, LOW);
  digitalWrite(LED_F, LOW);
  digitalWrite(LED_G, LOW);
}